functions:
  - isLoggedIn(): auth.uid !== null

schema:
  definitions:
    order:
      type: object
      properties:
        coffeeType: {type: string}
        sugar: {type: number}
        milk: {type: string}
        uid: {type: string}
        timestamp: {type: number}
        clientName: {type: string}
        payerId: {type: string}
        payerName: {type: string}

  type: object
  properties:
    users:
      type: object
      $uid:
        type: object
        properties:
          displayName: {type: string}
          groupId: {type: string}

    userGroups:
      type: object
      indexOn: name
      $group:
        type: object
        properties:
          name: {type: string}
          # users:
          #   type: object
          #   $userId: {type: boolean} #value is meaningless

    userPreferences:
      type: object
      $uid:
        type: object
        properties:
          preferredCoffeeType: {type: string}
          preferredSugar: {type: number}
          preferredMilk: {type: string}

    coffeeData:
      type: object
      properties:
        coffeeTypeList:
          type: object
          $coffeeType:
            type: object
            properties:
              name: {type: string}
              shortName: {type: string}
        milkTypeList:
          type: object
          $milkType:
            type: object
            properties:
              name: {type: string}
              shortName: {type: string}
        sugarTypeList:
          type: object
          $sugarType:
            type: object
            properties:
              name: {type: string}
              quantity: {type: number}

    groupData:
      type: object
      $groupId:
        type: object
        properties:
          userPaymentCache:
            type: object
            $uid:
              type: object
              properties:
                credit: {type: number}
                lastPayment: {type: number}

          orderList:
            type: object
            properties:
              pending:
                type: object
                indexOn: [uid, payerId, selectedByUid]
                $order: {$ref: "#/definitions/order"}
                properties:
                  selected: {type: boolean}
                  selectedTimestamp: {type: number}
                  selectedByUid: {type: string}
                  selectedByUserDisplayName: {type: string}
              paid:
                type: object
                indexOn: timestamp
                $order: {$ref: "#/definitions/order"}

          receiptList:
            type: object
            properties:
              current:
                type: object
                indexOn: timestamp
                $receipt:
                  type: object
                  properties:
                    payerId: {type: string}
                    payerName: {type: string}
                    timestamp: {type: number}
                    cost: {type: number}
                    # orderList:
                    #   type: object
                    #   $orderId: {type: string} # value is userId

access:
  - location: /
    read:  true && isLoggedIn()
    write: true && isLoggedIn()
